version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: rain_alert_db
    environment:
      POSTGRES_DB: rain_alert
      POSTGRES_USER: rain_alert_user
      POSTGRES_PASSWORD: rain_alert_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rain_alert_user -d rain_alert"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rain_alert_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/rain_alert
      SPRING_DATASOURCE_USERNAME: rain_alert_user
      SPRING_DATASOURCE_PASSWORD: rain_alert_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:

networks:
  rain_alert_network:
    driver: bridge 